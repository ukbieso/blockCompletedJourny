/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.ruter.events.avro.tps;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** ServiceLink */
@org.apache.avro.specific.AvroGenerated
public class ServiceLink extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3819015114387660694L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ServiceLink\",\"namespace\":\"no.ruter.events.avro.tps\",\"doc\":\"ServiceLink\",\"fields\":[{\"name\":\"serviceLinkID\",\"type\":\"string\"},{\"name\":\"distance\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"poslistID\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"linklocations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Position\",\"doc\":\"Position\",\"fields\":[{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"lon\",\"type\":\"double\"}]}}],\"default\":null},{\"name\":\"fromPoint\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"QuayStop\",\"doc\":\"Quay with Stop Place\",\"fields\":[{\"name\":\"stopId\",\"type\":\"string\"},{\"name\":\"stopName\",\"type\":\"string\"},{\"name\":\"quayId\",\"type\":\"string\"},{\"name\":\"position\",\"type\":\"Position\"},{\"name\":\"order\",\"type\":\"int\"},{\"name\":\"arrivalTime\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"departureTime\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"quayOldId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"destinationDisplay\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"destinationDisplayVia\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"toPoint\",\"type\":[\"null\",\"QuayStop\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ServiceLink> ENCODER =
      new BinaryMessageEncoder<ServiceLink>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ServiceLink> DECODER =
      new BinaryMessageDecoder<ServiceLink>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ServiceLink> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ServiceLink> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ServiceLink>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ServiceLink to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ServiceLink from a ByteBuffer. */
  public static ServiceLink fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence serviceLinkID;
  @Deprecated public java.lang.Double distance;
  @Deprecated public java.lang.CharSequence poslistID;
  @Deprecated public java.util.List<no.ruter.events.avro.tps.Position> linklocations;
  @Deprecated public no.ruter.events.avro.tps.QuayStop fromPoint;
  @Deprecated public no.ruter.events.avro.tps.QuayStop toPoint;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ServiceLink() {}

  /**
   * All-args constructor.
   * @param serviceLinkID The new value for serviceLinkID
   * @param distance The new value for distance
   * @param poslistID The new value for poslistID
   * @param linklocations The new value for linklocations
   * @param fromPoint The new value for fromPoint
   * @param toPoint The new value for toPoint
   */
  public ServiceLink(java.lang.CharSequence serviceLinkID, java.lang.Double distance, java.lang.CharSequence poslistID, java.util.List<no.ruter.events.avro.tps.Position> linklocations, no.ruter.events.avro.tps.QuayStop fromPoint, no.ruter.events.avro.tps.QuayStop toPoint) {
    this.serviceLinkID = serviceLinkID;
    this.distance = distance;
    this.poslistID = poslistID;
    this.linklocations = linklocations;
    this.fromPoint = fromPoint;
    this.toPoint = toPoint;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return serviceLinkID;
    case 1: return distance;
    case 2: return poslistID;
    case 3: return linklocations;
    case 4: return fromPoint;
    case 5: return toPoint;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: serviceLinkID = (java.lang.CharSequence)value$; break;
    case 1: distance = (java.lang.Double)value$; break;
    case 2: poslistID = (java.lang.CharSequence)value$; break;
    case 3: linklocations = (java.util.List<no.ruter.events.avro.tps.Position>)value$; break;
    case 4: fromPoint = (no.ruter.events.avro.tps.QuayStop)value$; break;
    case 5: toPoint = (no.ruter.events.avro.tps.QuayStop)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'serviceLinkID' field.
   * @return The value of the 'serviceLinkID' field.
   */
  public java.lang.CharSequence getServiceLinkID() {
    return serviceLinkID;
  }

  /**
   * Sets the value of the 'serviceLinkID' field.
   * @param value the value to set.
   */
  public void setServiceLinkID(java.lang.CharSequence value) {
    this.serviceLinkID = value;
  }

  /**
   * Gets the value of the 'distance' field.
   * @return The value of the 'distance' field.
   */
  public java.lang.Double getDistance() {
    return distance;
  }

  /**
   * Sets the value of the 'distance' field.
   * @param value the value to set.
   */
  public void setDistance(java.lang.Double value) {
    this.distance = value;
  }

  /**
   * Gets the value of the 'poslistID' field.
   * @return The value of the 'poslistID' field.
   */
  public java.lang.CharSequence getPoslistID() {
    return poslistID;
  }

  /**
   * Sets the value of the 'poslistID' field.
   * @param value the value to set.
   */
  public void setPoslistID(java.lang.CharSequence value) {
    this.poslistID = value;
  }

  /**
   * Gets the value of the 'linklocations' field.
   * @return The value of the 'linklocations' field.
   */
  public java.util.List<no.ruter.events.avro.tps.Position> getLinklocations() {
    return linklocations;
  }

  /**
   * Sets the value of the 'linklocations' field.
   * @param value the value to set.
   */
  public void setLinklocations(java.util.List<no.ruter.events.avro.tps.Position> value) {
    this.linklocations = value;
  }

  /**
   * Gets the value of the 'fromPoint' field.
   * @return The value of the 'fromPoint' field.
   */
  public no.ruter.events.avro.tps.QuayStop getFromPoint() {
    return fromPoint;
  }

  /**
   * Sets the value of the 'fromPoint' field.
   * @param value the value to set.
   */
  public void setFromPoint(no.ruter.events.avro.tps.QuayStop value) {
    this.fromPoint = value;
  }

  /**
   * Gets the value of the 'toPoint' field.
   * @return The value of the 'toPoint' field.
   */
  public no.ruter.events.avro.tps.QuayStop getToPoint() {
    return toPoint;
  }

  /**
   * Sets the value of the 'toPoint' field.
   * @param value the value to set.
   */
  public void setToPoint(no.ruter.events.avro.tps.QuayStop value) {
    this.toPoint = value;
  }

  /**
   * Creates a new ServiceLink RecordBuilder.
   * @return A new ServiceLink RecordBuilder
   */
  public static no.ruter.events.avro.tps.ServiceLink.Builder newBuilder() {
    return new no.ruter.events.avro.tps.ServiceLink.Builder();
  }

  /**
   * Creates a new ServiceLink RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ServiceLink RecordBuilder
   */
  public static no.ruter.events.avro.tps.ServiceLink.Builder newBuilder(no.ruter.events.avro.tps.ServiceLink.Builder other) {
    return new no.ruter.events.avro.tps.ServiceLink.Builder(other);
  }

  /**
   * Creates a new ServiceLink RecordBuilder by copying an existing ServiceLink instance.
   * @param other The existing instance to copy.
   * @return A new ServiceLink RecordBuilder
   */
  public static no.ruter.events.avro.tps.ServiceLink.Builder newBuilder(no.ruter.events.avro.tps.ServiceLink other) {
    return new no.ruter.events.avro.tps.ServiceLink.Builder(other);
  }

  /**
   * RecordBuilder for ServiceLink instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ServiceLink>
    implements org.apache.avro.data.RecordBuilder<ServiceLink> {

    private java.lang.CharSequence serviceLinkID;
    private java.lang.Double distance;
    private java.lang.CharSequence poslistID;
    private java.util.List<no.ruter.events.avro.tps.Position> linklocations;
    private no.ruter.events.avro.tps.QuayStop fromPoint;
    private no.ruter.events.avro.tps.QuayStop.Builder fromPointBuilder;
    private no.ruter.events.avro.tps.QuayStop toPoint;
    private no.ruter.events.avro.tps.QuayStop.Builder toPointBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(no.ruter.events.avro.tps.ServiceLink.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.serviceLinkID)) {
        this.serviceLinkID = data().deepCopy(fields()[0].schema(), other.serviceLinkID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.distance)) {
        this.distance = data().deepCopy(fields()[1].schema(), other.distance);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.poslistID)) {
        this.poslistID = data().deepCopy(fields()[2].schema(), other.poslistID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.linklocations)) {
        this.linklocations = data().deepCopy(fields()[3].schema(), other.linklocations);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fromPoint)) {
        this.fromPoint = data().deepCopy(fields()[4].schema(), other.fromPoint);
        fieldSetFlags()[4] = true;
      }
      if (other.hasFromPointBuilder()) {
        this.fromPointBuilder = no.ruter.events.avro.tps.QuayStop.newBuilder(other.getFromPointBuilder());
      }
      if (isValidValue(fields()[5], other.toPoint)) {
        this.toPoint = data().deepCopy(fields()[5].schema(), other.toPoint);
        fieldSetFlags()[5] = true;
      }
      if (other.hasToPointBuilder()) {
        this.toPointBuilder = no.ruter.events.avro.tps.QuayStop.newBuilder(other.getToPointBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ServiceLink instance
     * @param other The existing instance to copy.
     */
    private Builder(no.ruter.events.avro.tps.ServiceLink other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.serviceLinkID)) {
        this.serviceLinkID = data().deepCopy(fields()[0].schema(), other.serviceLinkID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.distance)) {
        this.distance = data().deepCopy(fields()[1].schema(), other.distance);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.poslistID)) {
        this.poslistID = data().deepCopy(fields()[2].schema(), other.poslistID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.linklocations)) {
        this.linklocations = data().deepCopy(fields()[3].schema(), other.linklocations);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fromPoint)) {
        this.fromPoint = data().deepCopy(fields()[4].schema(), other.fromPoint);
        fieldSetFlags()[4] = true;
      }
      this.fromPointBuilder = null;
      if (isValidValue(fields()[5], other.toPoint)) {
        this.toPoint = data().deepCopy(fields()[5].schema(), other.toPoint);
        fieldSetFlags()[5] = true;
      }
      this.toPointBuilder = null;
    }

    /**
      * Gets the value of the 'serviceLinkID' field.
      * @return The value.
      */
    public java.lang.CharSequence getServiceLinkID() {
      return serviceLinkID;
    }

    /**
      * Sets the value of the 'serviceLinkID' field.
      * @param value The value of 'serviceLinkID'.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder setServiceLinkID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.serviceLinkID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceLinkID' field has been set.
      * @return True if the 'serviceLinkID' field has been set, false otherwise.
      */
    public boolean hasServiceLinkID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'serviceLinkID' field.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder clearServiceLinkID() {
      serviceLinkID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'distance' field.
      * @return The value.
      */
    public java.lang.Double getDistance() {
      return distance;
    }

    /**
      * Sets the value of the 'distance' field.
      * @param value The value of 'distance'.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder setDistance(java.lang.Double value) {
      validate(fields()[1], value);
      this.distance = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'distance' field has been set.
      * @return True if the 'distance' field has been set, false otherwise.
      */
    public boolean hasDistance() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'distance' field.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder clearDistance() {
      distance = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'poslistID' field.
      * @return The value.
      */
    public java.lang.CharSequence getPoslistID() {
      return poslistID;
    }

    /**
      * Sets the value of the 'poslistID' field.
      * @param value The value of 'poslistID'.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder setPoslistID(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.poslistID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'poslistID' field has been set.
      * @return True if the 'poslistID' field has been set, false otherwise.
      */
    public boolean hasPoslistID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'poslistID' field.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder clearPoslistID() {
      poslistID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'linklocations' field.
      * @return The value.
      */
    public java.util.List<no.ruter.events.avro.tps.Position> getLinklocations() {
      return linklocations;
    }

    /**
      * Sets the value of the 'linklocations' field.
      * @param value The value of 'linklocations'.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder setLinklocations(java.util.List<no.ruter.events.avro.tps.Position> value) {
      validate(fields()[3], value);
      this.linklocations = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'linklocations' field has been set.
      * @return True if the 'linklocations' field has been set, false otherwise.
      */
    public boolean hasLinklocations() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'linklocations' field.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder clearLinklocations() {
      linklocations = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'fromPoint' field.
      * @return The value.
      */
    public no.ruter.events.avro.tps.QuayStop getFromPoint() {
      return fromPoint;
    }

    /**
      * Sets the value of the 'fromPoint' field.
      * @param value The value of 'fromPoint'.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder setFromPoint(no.ruter.events.avro.tps.QuayStop value) {
      validate(fields()[4], value);
      this.fromPointBuilder = null;
      this.fromPoint = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'fromPoint' field has been set.
      * @return True if the 'fromPoint' field has been set, false otherwise.
      */
    public boolean hasFromPoint() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'fromPoint' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public no.ruter.events.avro.tps.QuayStop.Builder getFromPointBuilder() {
      if (fromPointBuilder == null) {
        if (hasFromPoint()) {
          setFromPointBuilder(no.ruter.events.avro.tps.QuayStop.newBuilder(fromPoint));
        } else {
          setFromPointBuilder(no.ruter.events.avro.tps.QuayStop.newBuilder());
        }
      }
      return fromPointBuilder;
    }

    /**
     * Sets the Builder instance for the 'fromPoint' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public no.ruter.events.avro.tps.ServiceLink.Builder setFromPointBuilder(no.ruter.events.avro.tps.QuayStop.Builder value) {
      clearFromPoint();
      fromPointBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fromPoint' field has an active Builder instance
     * @return True if the 'fromPoint' field has an active Builder instance
     */
    public boolean hasFromPointBuilder() {
      return fromPointBuilder != null;
    }

    /**
      * Clears the value of the 'fromPoint' field.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder clearFromPoint() {
      fromPoint = null;
      fromPointBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'toPoint' field.
      * @return The value.
      */
    public no.ruter.events.avro.tps.QuayStop getToPoint() {
      return toPoint;
    }

    /**
      * Sets the value of the 'toPoint' field.
      * @param value The value of 'toPoint'.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder setToPoint(no.ruter.events.avro.tps.QuayStop value) {
      validate(fields()[5], value);
      this.toPointBuilder = null;
      this.toPoint = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'toPoint' field has been set.
      * @return True if the 'toPoint' field has been set, false otherwise.
      */
    public boolean hasToPoint() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'toPoint' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public no.ruter.events.avro.tps.QuayStop.Builder getToPointBuilder() {
      if (toPointBuilder == null) {
        if (hasToPoint()) {
          setToPointBuilder(no.ruter.events.avro.tps.QuayStop.newBuilder(toPoint));
        } else {
          setToPointBuilder(no.ruter.events.avro.tps.QuayStop.newBuilder());
        }
      }
      return toPointBuilder;
    }

    /**
     * Sets the Builder instance for the 'toPoint' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public no.ruter.events.avro.tps.ServiceLink.Builder setToPointBuilder(no.ruter.events.avro.tps.QuayStop.Builder value) {
      clearToPoint();
      toPointBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'toPoint' field has an active Builder instance
     * @return True if the 'toPoint' field has an active Builder instance
     */
    public boolean hasToPointBuilder() {
      return toPointBuilder != null;
    }

    /**
      * Clears the value of the 'toPoint' field.
      * @return This builder.
      */
    public no.ruter.events.avro.tps.ServiceLink.Builder clearToPoint() {
      toPoint = null;
      toPointBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ServiceLink build() {
      try {
        ServiceLink record = new ServiceLink();
        record.serviceLinkID = fieldSetFlags()[0] ? this.serviceLinkID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.distance = fieldSetFlags()[1] ? this.distance : (java.lang.Double) defaultValue(fields()[1]);
        record.poslistID = fieldSetFlags()[2] ? this.poslistID : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.linklocations = fieldSetFlags()[3] ? this.linklocations : (java.util.List<no.ruter.events.avro.tps.Position>) defaultValue(fields()[3]);
        if (fromPointBuilder != null) {
          record.fromPoint = this.fromPointBuilder.build();
        } else {
          record.fromPoint = fieldSetFlags()[4] ? this.fromPoint : (no.ruter.events.avro.tps.QuayStop) defaultValue(fields()[4]);
        }
        if (toPointBuilder != null) {
          record.toPoint = this.toPointBuilder.build();
        } else {
          record.toPoint = fieldSetFlags()[5] ? this.toPoint : (no.ruter.events.avro.tps.QuayStop) defaultValue(fields()[5]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ServiceLink>
    WRITER$ = (org.apache.avro.io.DatumWriter<ServiceLink>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ServiceLink>
    READER$ = (org.apache.avro.io.DatumReader<ServiceLink>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
